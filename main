import telebot
import random
import time
import sqlite3
import pymorphy2

bot = telebot.TeleBot('NUM')

morph = pymorphy2.MorphAnalyzer()

d = ''
with open("s-c.txt", encoding='utf-8') as f:
    d += f.read()

dict_1 = []
dict_2 = []
for line in d.splitlines():
    lst = line.split('\t')
    name = lst[0]
    surname = lst[1]
    dict_1.append([name, surname])
    dict_2.append([surname, name])
c = 0
b = 0
k = 0

db = sqlite3.connect('server.db', check_same_thread=False)
sql = db.cursor()
sql.execute('''CREATE TABLE IF NOT EXISTS database(
    id TEXT,
    answer TEXT)''')
replying = 0


def randomizer():
    b = random.randint(0, 1)
    c = random.randint(0, 193)
    if b == 0:
        return dict_1[c][0], 'capital', dict_1[c][1]
    else:
        return dict_2[c][0], 'country', dict_2[c][1]


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global k
    global replying
    mes = message.from_user.id
    if message.text == "Привет" or message.text == "Здраствуй!":
        bot.send_message(mes, "Привет, это угадайка! Проверь свои силы!")
    elif message.text == "/startgame" or replying == 1:
        place = randomizer()
        if place[1] == 'capital':
            final1 = str(place[0])
            final1 = final1.split()
            if len(final1) != 1:
                final = ''
                for elem in final1:
                    final = final + ' ' + morph.parse(elem)[0].inflect({'gent'}).word.capitalize()
            else:
                final = morph.parse(final1[0])[0].inflect({'gent'}).word.capitalize()

            if type(final) != str:
                final = place[0]
            bot.send_message(message.from_user.id, f"Назови мне столицу {final}")
            sql.execute(f"SELECT id FROM database WHERE id = '{mes}'")
            if sql.fetchone() is None:
                sql.execute(f"INSERT INTO database VALUES(?, ?)", (mes, place[2]))
                db.commit()
                print('completed')
            else:
                sql.execute(f'DELETE FROM database WHERE id = "{mes}"')
                db.commit()
                sql.execute(f"INSERT INTO database VALUES(?, ?)", (mes, place[2]))
                db.commit()
                print('ez')
            db.commit()
        else:
            bot.send_message(message.from_user.id, f"Назови мне страну, столицей которой является город: {place[0]}")
            sql.execute(f"SELECT id FROM database WHERE id = '{mes}'")
            if sql.fetchone() is None:
                sql.execute(f"INSERT INTO database VALUES(?, ?)", (mes, place[2]))
                db.commit()
                print('completed')
            else:
                sql.execute(f'DELETE FROM database WHERE id = "{mes}"')
                db.commit()
                sql.execute(f"INSERT INTO database VALUES(?, ?)", (mes, place[2]))
                db.commit()
                print('ez')
        bot.register_next_step_handler(message, guess)
    elif message.text == '/start':
        bot.send_message(message.from_user.id, "Привет! Это бот угадайка!")
    elif message.text.lower() == '/stopgame':
        k = 0
        replying = 0
        bot.send_message(message.from_user.id, "Хорошо! Обязательно поробуй еще!")
    elif message.text == "/help":
        bot.send_message(message.from_user.id, "Напиши 'Привет' или 'Здраствуй!, или '/startgame'")
    else:
        bot.send_message(message.from_user.id, "Я тебя не понимаю. Напиши /help.")


def guess(message):
    global k
    global replying
    mes = message.from_user.id
    sql.execute(f"SELECT answer FROM database WHERE id = '{mes}'")
    a = sql.fetchall()[0][0]
    db.commit()
    if a == message.text.capitalize():
        k += 1
        bot.send_message(message.from_user.id, f"Молодец! Твой стрик - {k}.")
        replying = 1
        get_text_messages(message)
    elif message.text.lower() == '/stopgame':
        bot.send_message(message.from_user.id, "Хорошо! Обязательно поробуй еще! Твой стрик был - k")
        k = 0
        replying = 0
    else:
        k = 0
        replying = 0
        bot.send_message(message.from_user.id, f"Ты не прав! Ответом был: {a}. Чтобы начать игру заново, напиши "
                                               f"'/startgame'")
        bot.register_next_step_handler(message, get_text_messages)


while True:
    try:
        bot.polling(none_stop=True)

    except Exception as e:
        print(e)
        time.sleep(15)
